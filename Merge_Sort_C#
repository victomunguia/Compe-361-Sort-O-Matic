private static int[] Merge_Sort(int[] userArray)
        {
            if (userArray.Length <= 1)
                return userArray;

            var left = new List<int>();
            var right = new List<int>();

            for(int i = 0; i < userArray.Length; i++)
            {
                if ((i%2) > 0)
                {
                    left.Add(userArray[i]);
                }
                else
                {
                    right.Add(userArray[i]);
                }
            }

            left = Merge_Sort(left.ToArray()).ToList();
            right = Merge_Sort(right.ToArray()).ToList();

            return Merge(left, right);
        }
        private static int[] Merge(List<int> left, List<int> right)
        {
            var result = new List<int>();
            while(left.Count > 0 && right.Count > 0)
            {
                if (left.First() <= right.First())
                {
                    result.Add(left.First());
                    left.RemoveAt(0);
                }
                else
                {
                    result.Add(right.First());
                    right.RemoveAt(0);
                }
            }

            while (left.Count > 0)
            {
                result.Add(left.First());
                left.RemoveAt(0);
            }
            while (right.Count > 0)
            {
                result.Add(right.First());
                right.RemoveAt(0);
            }
            return result.ToArray();
        }
